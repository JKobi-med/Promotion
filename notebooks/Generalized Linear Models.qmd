---
title: "Generalized Linear Models"
author: "Jonas J.R. Koberschinski"
author: "Kai Rouwen Wenger"
date: "16-11-2024"
---

## Data import
```{r}
#| include: false

# List of file names (without paths and extension)
file_names <- c(
  "bdnf_mean_T2T0.txt",
  "bdnf_mean_T1T0.txt",
  "bdnf_mean_T2T1.txt",
  
  "bdnf_median_T2T0.txt",
  "bdnf_median_T1T0.txt",
  "bdnf_median_T2T1.txt",
  
  "tau_mean_T2T0.txt",
  "tau_mean_T1T0.txt",
  "tau_mean_T2T1.txt",
  
  "tau_median_T2T0.txt",
  "tau_median_T1T0.txt",
  "tau_median_T2T1.txt",
  
  "psd95_mean_T2T0.txt",
  "psd95_mean_T1T0.txt",
  "psd95_mean_T2T1.txt",
  
  "psd95_median_T2T0.txt",
  "psd95_median_T1T0.txt",
  "psd95_median_T2T1.txt"
)

# Folder where the files are located
subfolder <- "/Users/kobi/Desktop/Promotionsdatananalyse mit Excel und Martin/Promotion (Quarto Manuscript)/tables/timepoint_tables"

# Loop through the file names, read each table, and assign it to a variable
for (file_name in file_names) {
  # Construct the full file path by combining the subfolder and file name
  file_path <- file.path(subfolder, file_name)
  
  # Remove the .txt extension to get the base name for the variable
  var_name <- tools::file_path_sans_ext(file_name)
  
  # Read the table and assign it to a variable with the same name
  assign(var_name, read.table(file_path, sep = "\t", header = TRUE, row.names = NULL, quote = ""))
}
```

## Linear mixed (effect) models
To resolve non-independence!

add random effect for ID and maybe CpG (maybe even every CpGs and step()? Vielleicht nicht genug Freiheitsgrade bei Tau und PSD95 aber genug für BDNF)?

```{r}
library(lme4)

# pitch ~ politeness + sex + (1|subject) + ε 
# add a random effext for ID


lmem_bdnf_mean_T2T0 <- lmer(T2_T0 ~ Standort + Gruppe + Sex + Age_start + CogTel + (1|ID), 
                          data = bdnf_mean_T2T0)
```



## Skript von Kai

```{r}
# TBM-Methylation BDNF Analysis
#
# copyright (c) 2024 - MHH 
# written by: Jonas Janik Ralf Koberschinski
#
# last modified Sep, 2024
# first written Jan, 2024


#Prep
 ## Set working directory
setwd("/Users/kobi/Desktop/")
print(getwd())

 ## Load necessary packages
library(haven)
library(tidyverse)
library(dplyr)
library(writexl)

 ## Load the BDNF data from a .sav file
 ### ??? more information !!!  restructured without methylation mean!
BDNF <- read_sav("Auswertung Promotion/Auswertung MHH/Auswertung mit Christopher/BDNF_Neuroplastizität_Alter_CpGs_ohne_m11_und_p36_mit_verhalten_vollständig_umstrukturiert.sav")
View(BDNF)

 ### ??? more information !!! all CpGs without methylation mean!
BDNFunstr <- read_sav("Auswertung Promotion/Auswertung MHH/Auswertung mit Christopher/BDNF_Neuroplastizität_Alter_CpGs_ohne_m11_und_p36_mit_verhalten_vollständig.sav")
View(BDNFunstr)

 ### maybe not needed. Mit allen Verhaltensdaten, aber ohne mean!
BDNFnew <- read_sav("Epignentik/BDNF_Neuroplastizität_Alter_CpGs_ohne_m11_und_p36_mit_verhalten_neu.sav")
View(BDNFnew)

## no methylation mean in the files! Can't understand.

    ##to excel
    ### Read the SPSS file
    ## restructured with methylation mean
    spssdata1 <- read_spss("Auswertung Promotion/Auswertung MHH/Auswertung mit Christopher/BDNF_Neuroplastizität_Alter_CpGs_ohne_m11_und_p36_mit_verhalten_vollständig_umstrukturiert.sav") 

    ## all CpGs without methylation mean
    spssdata2 <- read_spss("Auswertung Promotion/Auswertung MHH/Auswertung mit Christopher/BDNF_Neuroplastizität_Alter_CpGs_ohne_m11_und_p36_mit_verhalten_vollständig.sav")
    
    # Write to an Excel file
      ## restructured with methylation mean
    write_xlsx(spssdata1, "Auswertung Promotion/Auswertung MHH/Auswertung mit Christopher/BDNF_Neuroplastizität_Alter_CpGs_ohne_m11_und_p36_mit_verhalten_vollständig_umstrukturiert.xlsx")

      ## all CpGs without methylation mean
    write_xlsx(spssdata2, "Auswertung Promotion/Auswertung MHH/Auswertung mit Christopher/BDNF_Neuroplastizität_Alter_CpGs_ohne_m11_und_p36_mit_verhalten_vollständig.xlsx")
    

# First look    
 ## Display the BDNF data
print(BDNF)

 ##first look at BDNF data
head(BDNF)
summary(BDNF)
 ## Check the structure of the dataset
str(BDNF)





## Data

# Remove rows with NA values in the 'methylierung' column
BDNF2 <- BDNF %>% drop_na(methylierung)

# Summarize the number of NA values in the 'methylierung' column (commented out)
# sum(is.na(BDNF$methylierung))

# without NA
summary(BDNF2)





### MHB-Code

# Load the nlme package for mixed models
library(nlme)

# Define mixed models without interaction
mixed_model_nointeraction1 <- lme(fixed= methylierung ~ as.factor(Group),
                                  random=~1|id_umstrukturieren,
                                  method="ML",data=BDNF2)
 
mixed_model_nointeraction2 <- lme(fixed= methylierung ~ as.factor(Group) +  as.factor(Zeitpunkt),
                                 random=~1|id_umstrukturieren,
                                 method="ML",data=BDNF2)


# Split the data by group
BDNF_controll = BDNF2[BDNF2$Gruppe=='Controll',]
BDNF_piano    = BDNF2[BDNF2$Gruppe=='Piano',]


# Define a mixed model for the Piano group?????
mixed_model_piano <- lme(fixed= methylierung ~ as.factor(Zeitpunkt),
                                  random=~1|id_umstrukturieren,
                                  method="ML",data=BDNF_piano)


# Summarize the Piano group model
summary(mixed_model_piano)






# NEU NEU NEU ##########
#########################

#(colour_plot <- ggplot(BDNF2, aes(x = Zeitpunkt_als_Zahl, y = methylierung, colour = Group)) +
#   geom_point(size = 2) +
#  theme_classic() ) +
#  geom_smooth(aes(Zeitpunkt_als_Zahl,methylierung),method="lm",se=FALSE)


# Plot methylation by time point and group with a linear trend line
colour_plot <- ggplot(BDNF2, aes(x = Zeitpunkt_als_Zahl, y = methylierung, colour = Group)) +
  geom_point(size = 2) +
  theme_classic() +
  geom_smooth(aes(x = Zeitpunkt_als_Zahl, y = methylierung), method = "lm", se = FALSE)

print(colour_plot)


# Check treat_group column
print(BDNF$treat_group)




# ????
# Summarize the no interaction models
summary(mixed_model_nointeraction1)
summary(mixed_model_nointeraction2)

# Plot the no interaction models
plot(mixed_model_nointeraction1)
# Corrected: changed 'mixed_model_nointeraction' to 'mixed_model_nointeraction2'
plot(mixed_model_nointeraction2
mixed_model_nointeraction2)


# Perform post-hoc tests using glht
contrasts <- glht(mixed_model_nointeraction2, linfct = mcp(Zeitpunkt = "Tukey"))
summary(contrasts)


# Define a mixed model with interaction
mixed_model_interaction <- lme(fixed= methylierung~ as.factor(Group) 
                               +  as.factor(Zeitpunkt) 
                               +  as.factor(Zeitpunkt)*as.factor(Group), 
                               random=~1|id_umstrukturieren, 
                               method="ML", 
                               data=BDNF2)


# Summarize the interaction model
summary(mixed_model_interaction)
plot(mixed_model_interaction)


# Install and load the lme4 package
install.packages(lme4)
library(lme4)
install.packages('multcomp')
library(multcomp)

# Define a mixed model using lme4
model <- lmer(methylierung ~ as.factor(Zeitpunkt) + 1 | as.factor(Group), data = BDNF2)


# Perform ANOVA to test for interaction between time and treatment group
anova(mixed_model_nointeraction2, mixed_model_interaction)


# p-value that shows if there is an interaction between time and treatment group:
anova(mixed_model_nointeraction, mixed_model_interaction)

# Example of generating dummy variables for treatment effect per time point:
ddata$treat_group1_time1=0
ddata$treat_group1_time1[which(ddata$time_point==1 & ddata$treat_group==1)]=1
ddata$treat_group1_time2=0
ddata$treat_group1_time2[which(ddata$time_point==2 & ddata$treat_group==1)]=1
ddata$treat_group1_time3=0
ddata$treat_group1_time3[which(ddata$time_point==3 & ddata$treat_group==1)]=1

# if there are 4 time points: please generate additional variable 'treat_group1_time4'

# if there are 2 time points: please use only two variables 'treat_group1_time1' and 'treat_group1_time2'


# Define a mixed model to calculate the treatment effect per time point
mixed_model_treatment_effect_per_time = lme(fixed= methylation~ as.factor(time_point) 
                                                  + as.factor(treat_group1_time1) 
                                                  +  as.factor(treat_group1_time2) 
                                                  + as.factor(treat_group1_time3), 
                                            random=~1|subjectkey, 
                                            method="ML", 
                                            data=ddata)


# Summarize and get confidence intervals for the treatment effect model
summary(mixed_model_treatment_effect_per_time)
intervals(mixed_model_treatment_effect_per_time)

```


Wichtige Abbildung!
```{r}
# Interaction plot showing methylation levels by group and time
interaction_plot <- ggplot(BDNF2, aes(x = Zeitpunkt, y = methylierung, group = Group, colour = Group)) +
  geom_line(stat = "summary", fun = mean) +
  geom_point(stat = "summary", fun = mean) +
  theme_classic() +
  labs(title = "Interaction Plot of Methylation Levels by Group and Time",
       x = "Time Point",
       y = "Mean Methylation Levels")

print(interaction_plot)

```

